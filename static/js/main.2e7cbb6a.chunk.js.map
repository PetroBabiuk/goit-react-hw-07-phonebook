{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","contacts","createReducer","state","foundNames","map","toLocaleLowerCase","lowerName","includes","alert","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phoneBook","persistReducer","phoneBookReducer","devTools","process","persistor","persistStore","connect","dispatch","onSubmit","useState","setName","setNumber","nameInputId","numberInputId","handleChange","evt","currentTarget","value","reset","preventDefault","className","s","form","label","htmlFor","input","type","pattern","title","required","onChange","button","e","target","inputId","labeltId","ContactListItem","onDelete","item","onClick","getVisibleContacts","allContacts","normalizedFilter","onDeleteContact","list","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2e7cbb6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2qyBI\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('phoneBook/add', (name, number) => ({\n    payload: {\n        id: shortid.generate(),\n        name,\n        number,\n    }\n}));\n\nconst deleteContact = createAction('phoneBook/delete');\nconst changeFilter = createAction('phoneBook/changeFilter');\n\nconst actions = { addContact, deleteContact, changeFilter };\n\nexport default actions;","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./actions\";\n\nconst contacts = createReducer([], {\n    [actions.addContact]: (state, { payload }) => {\n        const foundNames = state.map(({ name }) => name.toLocaleLowerCase());\n        const lowerName = payload.name.toLocaleLowerCase();\n        if (foundNames.includes(lowerName)) {\n            alert(`${payload.name} is already in contacts`);\n            return state;\n        }\n        return [payload, ...state];\n    },\n    [actions.deleteContact]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n    contacts,\n    filter,\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER, } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport phoneBookReducer from './reducer';\n\nconst contactsPersistConfig = {\n    key: 'contacts',\n    storage,\n    blacklist: ['filter'],\n};\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    }\n})];\n\nexport const store = configureStore({\n    reducer: {\n        phoneBook: persistReducer(contactsPersistConfig, phoneBookReducer),\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport actions from 'redux/actions';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    const handleChange = (evt) => {\n        const { name, value } = evt.currentTarget;\n\n        if (name === 'name') {\n            setName(value);\n        } else if (name === 'number') {\n            setNumber(value);\n        };\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onSubmit( name, number );\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n            <label className={s.label} htmlFor={nameInputId}>Name</label>\n            <input\n                className={s.input}\n                value={name}\n                type=\"text\"\n                name=\"name\"\n                id={nameInputId}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={handleChange}\n            />\n\n            <label className={s.label} htmlFor={numberInputId}>Number</label>\n            <input\n                className={s.input}\n                value={number}\n                type=\"tel\"\n                name=\"number\"\n                id={numberInputId}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={handleChange}\n            />\n                \n            <button\n                className={s.button}\n                type=\"submit\"\n            >\n                Add contact\n            </button>\n        </form>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(actions.addContact(name,number)),\n})\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from 'redux/actions';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nconst Filter = ({value, onChange}) => {\n    const inputId = shortid.generate();\n    const labeltId = shortid.generate();\n    return (\n    <>\n        <div className={s.form}>\n            <label htmlFor={labeltId} className={s.label}> Find contacts by name</label>\n            <input className={s.input} id={inputId} type=\"text\" value={value} onChange={onChange}/>\n        </div>\n    </>\n    )\n}    \n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n    value: state.phoneBook.filter\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: (e) => dispatch(actions.changeFilter(e.target.value))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ name, number, onDelete }) => (\n    <li className={s.item}>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <button type=\"button\" onClick={onDelete}>Delete</button>\n    </li>\n\n);\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import ContactListItem from './ContactListItem';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport actions from '../../redux/actions';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        contacts && (<ul className={s.list}>\n            {contacts.map(({ id, name, number }) => (\n                <ContactListItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    onDelete={() => onDeleteContact(id)}\n                />\n            ))}\n        \n        </ul>)\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return allContacts.filter(({name}) =>\n        name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n}\n\nconst mapStateToProps = ({ phoneBook: { contacts, filter } }) => ({\n    contacts: getVisibleContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import './App.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => (\n    <div>\n      <h1 className=\"text\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"text\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n\nexport default (App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport {store, persistor} from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}